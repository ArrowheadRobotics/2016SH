package org.usfirst.frc706.SussexCode;

import edu.wpi.first.wpilibj.CANSpeedController.ControlMode;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Relay;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

public class RobotMap {

	public static CANTalon chassisrightDriveOne;
    public static CANTalon chassisrightDriveTwo;
    public static CANTalon chassisleftDriveOne;
    public static CANTalon chassisleftDriveTwo;
    
    public static CANTalon intakeintakeDrive;
    public static CANTalon intakeintakeAngleDrive;
    
    public static CANTalon shootershooterAngleDrive;
    public static DoubleSolenoid shooterTriggerSol;
    public static DoubleSolenoid shooterOneSol;
    public static DoubleSolenoid shooterTwoSol;
    public static DoubleSolenoid hookSol;
    public static DoubleSolenoid winchPTO;
    

    public static void init() {
    	
        chassisrightDriveOne = new CANTalon(Constants.Chassis.RIGHT_MOTOR_ONE);
        LiveWindow.addActuator("Chassis", "rightDriveOne", chassisrightDriveOne);
        
        chassisrightDriveTwo = new CANTalon(Constants.Chassis.RIGHT_MOTOR_TWO);
        LiveWindow.addActuator("Chassis", "rightDriveTwo", chassisrightDriveTwo);
        
        chassisleftDriveOne = new CANTalon(Constants.Chassis.LEFT_MOTOR_ONE);
        LiveWindow.addActuator("Chassis", "leftDriveOne", chassisleftDriveOne);
        
        chassisleftDriveTwo = new CANTalon(Constants.Chassis.LEFT_MOTOR_TWO);
        LiveWindow.addActuator("Chassis", "leftDriveTwo", chassisleftDriveTwo);
        
        intakeintakeDrive = new CANTalon(Constants.Intake.INTAKE_DRIVE);
        LiveWindow.addActuator("Intake", "intakeDrive", intakeintakeDrive);
        
        intakeintakeAngleDrive = new CANTalon(Constants.Intake.INTAKE_ANGLE);
        LiveWindow.addActuator("Intake", "intakeAngleDrive", intakeintakeAngleDrive);
        
        shootershooterAngleDrive = new CANTalon(Constants.Shooter.SHOOTER_ANGLE);
        LiveWindow.addActuator("Shooter", "shooterAngleDrive", shootershooterAngleDrive);
        
        shooterTriggerSol = new DoubleSolenoid(Constants.PCM_ONE_ID, Constants.Shooter.TRIGGER_SOL_FORWARD, Constants.Shooter.TRIGGER_SOL_REVERSE);
        LiveWindow.addActuator("Shooter", "shooterTriggerSol", shooterTriggerSol);
        
        shooterOneSol = new DoubleSolenoid(Constants.PCM_ONE_ID, Constants.Shooter.SHOOTER_SOL_ONE_FORWARD, Constants.Shooter.SHOOTER_SOL_ONE_REVERSE);
        LiveWindow.addActuator("Shooter", "shooterSol", shooterOneSol);
        
        shooterTwoSol = new DoubleSolenoid(Constants.PCM_ONE_ID, Constants.Shooter.SHOOTER_SOL_TWO_FORWARD, Constants.Shooter.SHOOTER_SOL_TWO_REVERSE);
        LiveWindow.addActuator("Shooter", "shooter2Sol", shooterTwoSol);
        
        hookSol = new DoubleSolenoid(Constants.PCM_ONE_ID, 6, 7);
        LiveWindow.addActuator("Winch", "hookSol", hookSol);
        
        winchPTO = new DoubleSolenoid(Constants.PCM_TWO_ID, Constants.Winch.PTO_FORWARD, Constants.Winch.PTO_REVERSE);
        LiveWindow.addActuator("Winch", "winchPTO", winchPTO);
        
        
    }
}
