// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc706.SussexCode.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc706.SussexCode.Constants;
import org.usfirst.frc706.SussexCode.Robot;

/**
 *
 */
public class Climb extends Command {
	
	private int extendHookDelay = Constants.Winch.EXTEND_HOOK_DELAY;
	private int engageWinchDelay = Constants.Winch.ENGAGE_WINCH_DELAY;
	private int winchDriveDelay = Constants.Winch.DRIVE_WINCH_DELAY;
	private long startTime = System.currentTimeMillis();
	private long currentTime = 0;
	private double driveSpeed = Constants.Winch.WINCH_DRIVE_SPEED;

    public Climb() {
    	
    }

    protected void initialize() {
    	
    }

    protected void execute() {
    	
    	//put arm in place
    	
    	if(System.currentTimeMillis() > startTime + extendHookDelay){
    		new ExtendHook();
    		currentTime = extendHookDelay + currentTime + startTime;
    	}
    	
    	//lower arm
    	
    	if(System.currentTimeMillis() > currentTime + engageWinchDelay){
    		new EngageWinch();
    		currentTime = currentTime + engageWinchDelay;
    	}
    	
    	if(System.currentTimeMillis() > currentTime + winchDriveDelay) {
    		Robot.chassis.move(driveSpeed, driveSpeed);
    		currentTime = currentTime + winchDriveDelay;
    	}
    }

    protected boolean isFinished() {
    	if(System.currentTimeMillis() > currentTime){
    		return true;
    	}else{
    		return false;
    	}
    }


    protected void end() {
    	Robot.chassis.move(0, 0);
    }

    protected void interrupted() {
    }
}
